@using SetPosh.Controllers;
@model List<ProductModel>
@{
    List<ProductModel> Products = Model;
}

@*@section Styles{*@
<style>
    /* استایل جدید برای لیست محصولات */
    .empty-state {
        text-align: center;
        padding: 40px 20px;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        max-width: 400px;
        margin: 0 auto;
    }

        .empty-state img {
            width: 120px;
            height: 120px;
            margin-bottom: 20px;
            opacity: 0.6;
        }

        .empty-state h3 {
            color: #555;
            margin-bottom: 10px;
            font-size: 1.2rem;
        }

        .empty-state p {
            color: #888;
            font-size: 0.9rem;
        }

    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        gap: 20px;
        /*padding: 10px;*/
    }

    .product-card {
        background: #fff;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        position: relative;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
        }

    .product-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        z-index: 1;
    }

    .badge {
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: bold;
        color: white;
    }

    .in-stock {
        background-color: #28a745;
    }

    .out-of-stock {
        background-color: #dc3545;
    }

    .product-image {
        display: block;
        height: 180px;
        overflow: hidden;
    }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .product-card:hover .product-image img {
        transform: scale(1.05);
    }

    .product-info {
        /*padding: 15px;*/
    }

    .product_description_container {
        display: block;
        padding: 15px;
        text-decoration: none;
    }

    .product-title {
        font-size: 1rem;
        color: #333;
        margin-bottom: 8px;
        font-weight: 600;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        height: 2.8em;
        line-height: 1.4em;
    }

    .product-description {
        font-size: 0.85rem;
        color: #666;
        margin-bottom: 15px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        height: 2.8em;
        line-height: 1.4em;
    }

    .product-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 10px;
        border-top: 1px solid #eee;
        padding: 15px;
    }

    .product-price {
        font-size: 1rem;
        font-weight: bold;
        color: #007bff;
        text-decoration: unset;
    }

    .add-to-cart {
        background-color: #f8f9fa;
        border: none;
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        color: #555;
    }

        .add-to-cart:hover {
            background-color: #007bff;
            color: white;
        }

        .add-to-cart:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

    /* واکنش‌گرایی */
    @@media (max-width: 768px) {
        .product-grid {
            /*grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));*/
            grid-template-columns: repeat(1, 1fr);
            gap: 15px;
        }

        .product-image {
            height: 140px;
        }
    }

    @@media (max-width: 480px) {
        .product-grid {
            grid-template-columns: repeat(1, 1fr);
            gap: 10px;
        }

        .product-image {
            height: 180px;
        }

        .product-info {
            padding: 10px;
        }
    }
</style>
@*}*@

@*@if (Products.Count <= 0)
{
    <p>محصولی یافت نشد.</p>
}
else
{
    <div class="product_list">
        @foreach (ProductModel product in Products)
        {
            ProductImageModel? MainImg = product.ProductImages.FirstOrDefault(img => img.IsMain == true);

            <a class="product" href="@Url.Action(nameof(ProductController.ProductDetails), "Product", new { PSID = product.SID })" target="_blank">
                <img src="~/Image/ProductImage/@(MainImg?.ImgName ?? "NoPhoto.jpg")" alt="Product" class="" />
                <div class="product_details">
                    <h3>@product.PName</h3>
                    <p>@product.PDescription</p>
                </div>
            </a>
        }
    </div>
}*@

@if (Products.Count <= 0)
{
    <div class="empty-state">
        @*<img src="https://cdn-icons-png.flaticon.com/512/4076/4076478.png" alt="Empty box" width="120">*@
        <svg width="120" height="120" viewBox="0 0 24 24" fill="none" stroke="#ccc">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20 7v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7m16 0H4m16 0a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2m6 4v4m4-4v2" />
        </svg>
        <h3>محصولی یافت نشد</h3>
        @*<p>با تغییر فیلترها دوباره امتحان کنید</p>*@
    </div>
}
else
{
    <div class="product-grid">
        @foreach (ProductModel product in Products)
        {
            ProductImageModel? MainImg = product.ProductImages.FirstOrDefault(img => img.IsMain == true);
            bool IsStock = product.PCount > 0;

            <div class="product-card">
                <div class="product-badge">
                    @if (IsStock)
                    {
                        <span class="badge in-stock">موجود</span>
                    }
                    else
                    {
                        <span class="badge out-of-stock">ناموجود</span>
                    }
                </div>

                <a class="product-image" href="@Url.Action(nameof(ProductController.ProductDetails), "Product", new { PSID = product.SID })" target="_blank">
                    <img src="~/Image/ProductImage/@(MainImg?.ImgName ?? "NoPhoto.jpg")" alt="@product.PName" />
                </a>

                <div class="product-info">
                    <a class="product_description_container" href="@Url.Action(nameof(ProductController.ProductDetails), "Product", new { PSID = product.SID })" target="_blank">
                        <h3 class="product-title">@product.PName</h3>
                        <p class="product-description">@product.PDescription</p>
                    </a>

                    <div class="product-footer">
                        <a class="product-price" href="@Url.Action(nameof(ProductController.ProductDetails), "Product", new { PSID = product.SID })" target="_blank">@product.PPrice.ToString("N0") تومان</a>
                        <button class="add-to-cart" @(IsStock ? "" : "disabled")>
                            <svg viewBox="0 0 24 24" width="20" height="20">
                                <path fill="currentColor" d="M17,18A2,2 0 0,1 19,20A2,2 0 0,1 17,22C15.89,22 15,21.1 15,20C15,18.89 15.89,18 17,18M1,2H4.27L5.21,4H20A1,1 0 0,1 21,5C21,5.17 20.95,5.34 20.88,5.5L17.3,11.97C16.96,12.58 16.3,13 15.55,13H8.1L7.2,14.63L7.17,14.75A0.25,0.25 0 0,0 7.42,15H19V17H7A2,2 0 0,1 5,15C5,14.65 5.09,14.32 5.24,14.04L6.6,11.59L3,4H1V2M7,18A2,2 0 0,1 9,20A2,2 0 0,1 7,22C5.89,22 5,21.1 5,20C5,18.89 5.89,18 7,18M16,11L18.78,6H6.14L8.5,11H16Z" />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}